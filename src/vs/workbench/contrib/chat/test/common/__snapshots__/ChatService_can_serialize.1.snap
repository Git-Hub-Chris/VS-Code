{
  requesterUsername: "test",
  requesterAvatarIconUri: undefined,
  responderUsername: "",
  responderAvatarIconUri: undefined,
  initialLocation: "panel",
  requests: [
    {
      requestId: "request_8ba5b8de-0652-41ae-b5a4-884d3c87b0af",
      message: {
        parts: [
          {
            range: {
              start: 0,
              endExclusive: 28
            },
            editorRange: {
              startLineNumber: 1,
              startColumn: 1,
              endLineNumber: 1,
              endColumn: 29
            },
            agent: {
              name: "ChatProviderWithUsedContext",
              id: "ChatProviderWithUsedContext",
              extensionId: {
                value: "nullExtensionDescription",
                _lower: "nullextensiondescription"
              },
              extensionPublisherId: "",
              publisherDisplayName: "",
              extensionDisplayName: "",
              locations: [ "panel" ],
              metadata: { requester: { name: "test" } },
              slashCommands: [  ],
              disambiguation: [  ]
            },
            kind: "agent"
          },
          {
            range: {
              start: 28,
              endExclusive: 41
            },
            editorRange: {
              startLineNumber: 1,
              startColumn: 29,
              endLineNumber: 1,
              endColumn: 42
            },
            text: " test request",
            kind: "text"
          }
        ],
        text: "@ChatProviderWithUsedContext test request"
      },
      variableData: { variables: [  ] },
      response: [  ],
      responseId: "response_7e7de94c-7908-4cba-83dd-8192cc691fe3",
      result: { metadata: { metadataKey: "value" } },
      followups: [
        {
          kind: "reply",
          message: "Something else",
          agentId: "",
          tooltip: "a tooltip"
        }
      ],
      isCanceled: false,
      vote: undefined,
      voteDownReason: undefined,
      agent: {
        name: "ChatProviderWithUsedContext",
        id: "ChatProviderWithUsedContext",
        extensionId: {
          value: "nullExtensionDescription",
          _lower: "nullextensiondescription"
        },
        extensionPublisherId: "",
        publisherDisplayName: "",
        extensionDisplayName: "",
        locations: [ "panel" ],
        metadata: { requester: { name: "test" } },
        slashCommands: [  ],
        disambiguation: [  ]
      },
      slashCommand: undefined,
      usedContext: {
        documents: [
          {
            uri: URI(file:///test/path/to/file),
            version: 3,
            ranges: [
              {
                startLineNumber: 1,
                startColumn: 1,
                endLineNumber: 2,
                endColumn: 2
              }
            ]
          }
        ],
        kind: "usedContext"
      },
      contentReferences: [  ],
      codeCitations: [  ],
      timestamp: undefined
    },
    {
      requestId: "request_9c7d3648-cc4a-4c63-9ad0-54593736fa40",
      message: {
        parts: [
          {
            range: {
              start: 0,
              endExclusive: 14
            },
            editorRange: {
              startLineNumber: 1,
              startColumn: 1,
              endLineNumber: 1,
              endColumn: 15
            },
            text: "test request 2",
            kind: "text"
          }
        ],
        text: "test request 2"
      },
      variableData: { variables: [  ] },
      response: [  ],
      responseId: "response_81c8285d-939b-4aaf-b0df-fcd84ebc3d0a",
      result: {  },
      followups: [  ],
      isCanceled: false,
      vote: undefined,
      voteDownReason: undefined,
      agent: {
        name: "testAgent",
        id: "testAgent",
        extensionId: {
          value: "nullExtensionDescription",
          _lower: "nullextensiondescription"
        },
        extensionPublisherId: "",
        publisherDisplayName: "",
        extensionDisplayName: "",
        locations: [ "panel" ],
        metadata: { requester: { name: "test" } },
        slashCommands: [  ],
        disambiguation: [  ],
        isDefault: true
      },
      slashCommand: undefined,
      usedContext: undefined,
      contentReferences: [  ],
      codeCitations: [  ],
      timestamp: undefined
    }
  ]
}